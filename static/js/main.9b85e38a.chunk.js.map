{"version":3,"sources":["Sounds/alarmsound.mp3","components/usewindowsize.jsx","components/DigitalCharacter.jsx","components/colon.jsx","components/Day.jsx","components/Digitalclock.jsx","components/alarm.jsx","components/timer.jsx","App.js","reportWebVitals.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","DigitalCharacter","props","num","fillcolor","xval","yval","A","parseInt","B","C","D","E","F","G","fill","d","Colon","screenwidth","Day","dayval","monrect","x","y","rx","ry","stroke-width","stroke","opacity","montext","font-family","font-weight","font-size","tuerect","tuetext","wedrect","wedtext","thurect","thutext","frirect","fritext","satrect","sattext","sunrect","suntext","Digitalclock","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","Date","date","setDate","aPPLContext","useContext","APPLContext","hr1digit","useRef","hr2digit","min1digit","min2digit","second1digit","second2digit","AMPMCharterChange","day","month","year","daydate","isPlaying","audioRef","Audio","alarmsound","alarmhr","tkID","setInterval","clearInterval","min","getMinutes","toString","current","slice","mintime","hr","getHours","ap","hourtime","sec","getSeconds","sectime","getDay","daytime","getDate","calendardatetime","getMonth","monthtime","getFullYear","yeartime","ampm","alarmflag","play","pause","checkAlarmSet","className","xmlns","viewBox","Alarm","Alarmonoffstyleindicator","setState","document","checkbox","querySelector","checked","Changealarmflag","id","onClick","getElementById","style","h","Changehr","Increasehrbutton","decreasehrbutton","m","Changemin","Increaseminbutton","decreaseminbutton","ChangeAMPM","class","type","Timer","timermin","timerhr","doonceflag","startstopflag","setstartstopflag","count","setcount","mincountdown","setmincountdown","hrcountdown","sethrcountdown","seccountdown","setseccountdown","soundonoff","setsoundonoff","audioRef1","intervaltimerId","Math","floor","sc","totalmin","console","log","divmin","muted","src","value","start","stop","Reset","React","createContext","Timerhr","Timermin","Timerseconds","Timerflag","Timerinitcountdowntime","ChangeTimerhr","ChangeTimermin","ChangeTimerseconds","ChangeTimerflag","ChangeTimerinitcountdowntime","App","sethr","setmin","setampm","setalarmflag","setTimerhr","setTimermin","setTimerseconds","setTimerflag","setTimerinitcountdowntime","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9b85e38a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alarmsound.0bcbb083.mp3\";","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React from 'react'\r\n\r\nconst DigitalCharacter = (props) => {\r\nconst {num,fillcolor,xval,yval} = props\r\n\r\nconst A = () => {\r\n    let newxvalue =  40.390016 + parseInt(xval)\r\n    let newyvalue =  59.459979 + parseInt(yval)\r\n    let a = \"m \"+newxvalue+\",\"+newyvalue+\" -0.950854,0.510244 1.622048,1.275609 4.698347,0.08505 2.013579,-1.658292 -0.61526,-0.212602 z\"\r\n   return a\r\n}\r\nconst B = () => {\r\n    let newxvalue =  47.813989 + parseInt(xval)\r\n    let newyvalue =  60.339657 + parseInt(yval)\r\n    let b = \"m \"+newxvalue+\",\"+newyvalue+\" -1.370166,1.181174 -0.566963,6.047621 1.181174,0.992188 0.803201,-0.803201 0.566963,-6.614584 z\"\r\n    return b\r\n}\r\nconst C = () => {\r\n    let newxvalue =  47.466455 + parseInt(xval)\r\n    let newyvalue =  69.76097 + parseInt(yval)\r\n    let c = \"m \"+newxvalue+\",\"+newyvalue+\" -0.451068,6.991137 -0.451066,0.714423 -1.443415,-1.581937 0.405962,-5.460231 1.533627,-1.224725 z\"\r\n    \r\n    return c\r\n}\r\nconst D = () => {\r\n    let newxvalue =  44.668521 + parseInt(xval)\r\n    let newyvalue =  76.539365 + parseInt(yval)\r\n    let d = \"m \"+newxvalue+\",\"+newyvalue+\" -5.339724,0.08355 -1.816609,1.253299 0.660585,0.375989 6.99119,-0.04178 0.935826,-0.501318 z\"\r\n    \r\n    return d\r\n}\r\nconst E = () => {\r\n    let newxvalue =  38.411829 + parseInt(xval)\r\n    let newyvalue =  69.066138 + parseInt(yval)\r\n    let e = \"m \"+newxvalue+\",\"+newyvalue+\" -0.708704,1.023006 -0.614212,6.291487 0.377976,0.920707 1.417412,-1.227607 0.472469,-5.984587 z\"\r\n    return e\r\n}\r\nconst F = () => {\r\n    let newxvalue =  39.167781 + parseInt(xval)\r\n    let newyvalue =  60.386904 + parseInt(yval)\r\n    let f = \"m \"+newxvalue+\",\"+newyvalue+\" -0.708705,0.850445 -0.566962,6.52009 0.708705,0.708705 1.133927,-0.708705 0.519719,-6.236608 z\"\r\n    \r\n    return f\r\n}\r\nconst G = () => {\r\n    let newxvalue =  39.106562 + parseInt(xval)\r\n    let newyvalue =  68.844501 + parseInt(yval)\r\n    let g = \"m \"+newxvalue+\",\"+newyvalue+\" 1.508511,-0.890366 4.916625,0.04687 0.949803,0.749783 -1.508511,1.077814 h -4.693141 z\"\r\n    \r\n\r\n    return g\r\n}\r\nconst H = () => {\r\n    let newxvalue =  42.673227 + parseInt(xval)\r\n    let newyvalue =  61.924095 + parseInt(yval)\r\n    let h = \"m \"+newxvalue+\",\"+newyvalue+\" h 1.06937 l -0.260117,4.555812 -0.404626,0.683372 -0.491331,-0.813539 z\"\r\n     \r\n\r\n    return h\r\n}\r\n\r\nconst Blank = () => {\r\n    let newxvalue =  45.411788 + parseInt(xval)\r\n    let newyvalue =  77.597047 + parseInt(yval)\r\n    let BL = \"m \"+newxvalue+\",\"+newyvalue+\" 0.684451,0.03584 v 0.501734 h -0.72723 z\"\r\n    //m 45.411788,77.597047 0.684451,0.03584 v 0.501734 h -0.72723 z\r\n\r\n    return BL\r\n}\r\n\r\n\r\nif(num==='.'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={Blank()}/>\r\n            </g>\r\n             \r\n           \r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nif(num==='0'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={A()}/>\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={B()}/>\r\n            </g>\r\n            \r\n            <g fill={fillcolor}>\r\n                <path d={C()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={D()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={E()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={F()}/>\r\n            </g>\r\n           \r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nif(num==='1'){\r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={B()}/>\r\n\r\n             </g>\r\n             <g fill={fillcolor}>\r\n                <path d={C()}/>\r\n            </g>\r\n        </svg>\r\n\r\n    )\r\n}\r\nif(num==='2'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={A()}/>\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={B()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={G()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={E()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={D()}/>\r\n            </g>\r\n        </svg>\r\n\r\n    )\r\n}\r\nif(num==='3'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={A()}/>\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={B()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={G()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={C()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={D()}/>\r\n            </g>\r\n        </svg>\r\n\r\n    )\r\n}\r\nif(num==='4'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={F()}/>\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={B()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={G()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={C()}/>\r\n            </g>\r\n            \r\n        </svg>\r\n\r\n    )\r\n}\r\nif(num==='5'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={A()}/>\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={F()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={G()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={C()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={D()}/>\r\n            </g>\r\n            \r\n        </svg>\r\n\r\n    )\r\n}\r\nif(num==='6'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={A()}/>\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={F()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={G()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={C()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={D()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={E()}/>\r\n            </g>\r\n            \r\n        </svg>\r\n\r\n    )\r\n}\r\nif(num==='7'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={A()}/>\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={B()}/>\r\n            </g>\r\n            \r\n            <g fill={fillcolor}>\r\n                <path d={C()}/>\r\n            </g>\r\n           \r\n            \r\n            \r\n        </svg>\r\n\r\n    )\r\n}\r\nif(num==='8'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={A()}/>\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={B()}/>\r\n            </g>\r\n            \r\n            <g fill={fillcolor}>\r\n                <path d={C()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={D()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={E()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={F()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={G()}/>\r\n            </g>\r\n        </svg>\r\n\r\n    )\r\n}\r\nif(num==='9'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={A()}/>\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={B()}/>\r\n            </g>\r\n            \r\n            <g fill={fillcolor}>\r\n                <path d={C()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={D()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={F()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={G()}/>\r\n            </g>\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nif(num==='M'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={A()}/>\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={B()}/>\r\n            </g>\r\n            \r\n            <g fill={fillcolor}>\r\n                <path d={C()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={H()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={F()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={E()}/>\r\n            </g>\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nif(num==='A'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={A()}/>\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={B()}/>\r\n            </g>\r\n            \r\n            <g fill={fillcolor}>\r\n                <path d={C()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={G()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={F()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={E()}/>\r\n            </g>\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nif(num==='P'){\r\n     \r\n    \r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={A()}/>\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={B()}/>\r\n            </g>\r\n            \r\n           \r\n            <g fill={fillcolor}>\r\n                <path d={G()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={F()}/>\r\n            </g>\r\n            <g fill={fillcolor}>\r\n                <path d={E()}/>\r\n            </g>\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\n}\r\nexport default DigitalCharacter","import React from 'react'\r\n\r\nconst Colon = (props) => {\r\nconst {fillcolor,xval,yval,screenwidth} = props\r\n\r\nconst topcolon = () => {\r\n    let newxvalue =  51.549609 + parseInt(xval)\r\n    let newyvalue =  62.738259 + parseInt(yval)\r\n    let top = \"m \"+newxvalue+\",\"+newyvalue+\" h 2.138156 l 0.03341,2.973374 -2.171565,-0.03341 z\"\r\n   \r\n    return top\r\n}\r\n\r\n\r\nconst bottomcolon = () => {\r\n    if (screenwidth > 414){\r\n    let newxvalue =  51.649836 + parseInt(xval)\r\n    let newyvalue =  71.424519 + parseInt(yval)\r\n    let bot = \"m \"+newxvalue+\",\"+newyvalue+\" h 2.138156 l 0.06682,3.374278 -2.138156,-0.03341 z\"\r\n     \r\n     return bot\r\n}\r\nelse{\r\n    let newxvalue =  57.424609 + parseInt(xval)\r\n    let newyvalue =  62.616047 + parseInt(yval)\r\n    let bot = \"m \"+newxvalue+\",\"+newyvalue+\" h 2.147717 l 0.06712,3.06713 -2.147717,-0.03037 z\"\r\n   \r\n     return bot\r\n}\r\n\r\n}\r\n\r\n    return(\r\n        <svg>\r\n            <g fill={fillcolor}>\r\n            <path d={topcolon()} />\r\n            </g>\r\n             <g fill={fillcolor}>\r\n                <path d={bottomcolon()} />\r\n            </g>\r\n            \r\n            \r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Colon","import React from 'react'\r\n\r\nconst Day = (props) => {\r\nconst {dayval,fillcolor,screenwidth} = props\r\n\r\n\r\n\r\n    const monrect = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <rect x=\"0\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.8' stroke='blue' opacity='0.6' />\r\n         return val\r\n        }\r\n        else{\r\n            const val = <rect x=\"9.5\" y=\"5\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.8' stroke='blue' opacity='0.6' />\r\n         return val\r\n        }\r\n    }\r\n    const monrectselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <rect x=\"0\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.8' stroke='blue' opacity='0.6'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <rect x=\"9.5\" y=\"5\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.8' stroke='blue' opacity='0.6' />\r\n         return val \r\n        }\r\n    }\r\n    const montext = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <text x=\"1.5\" y=\"37.5\" font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor} >Mon</text>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <text x=\"11.5\" y=\"12\" font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor} >Mon</text>\r\n         return val\r\n        }\r\n    }\r\n    const montextselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <text x=\"1.5\" y=\"37.5\" font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Mon</text>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <text x=\"11.5\" y=\"12\" font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Mon</text>\r\n            return val\r\n        }\r\n    }\r\n    const tuerect = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <rect x=\"17\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <rect x=\"9.5\" y=\"19\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n            return val\r\n        }\r\n    }\r\n    const tuetext = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <text x=\"20\" y=\"37.5\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor}>Tue</text>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <text x=\"11.5\" y=\"25\" font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor}>Tue</text>\r\n        return val\r\n        }\r\n    }\r\n    const tuerectselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <rect x=\"17\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <rect x=\"9.5\" y=\"19\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n            return val\r\n        }\r\n    }\r\n    const tuetextselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <text x=\"20\" y=\"37.5\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Tue</text>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <text x=\"11.5\" y=\"25\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Tue</text>\r\n        return val\r\n        }\r\n    }\r\n    const wedrect = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <rect x=\"34\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <rect x=\"9.5\" y=\"33\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n            return val\r\n        }\r\n    }\r\n    const wedrectselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <rect x=\"34\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val =  <rect x=\"9.5\" y=\"33\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n            return val\r\n        }\r\n    }\r\n\r\n    const wedtext = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <text x=\"36.2\" y=\"37.5\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor}>Wed</text>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <text x=\"11.5\" y=\"39\" font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor}>Wed</text>\r\n            return val\r\n        }\r\n    }\r\n    const wedtextselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <text x=\"36.2\" y=\"37.5\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Wed</text>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <text x=\"11.5\" y=\"39\" font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Wed</text>\r\n        return val\r\n        }\r\n    }\r\n    const thurect = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <rect x=\"52\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <rect x=\"9.5\" y=\"47\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val \r\n        }\r\n    }\r\n    const thurectselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <rect x=\"52\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <rect x=\"9.5\" y=\"47\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n            return val \r\n        }\r\n    }\r\n    const thutext = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <text x=\"54.5\" y=\"37.5\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor}>Thu</text>\r\n        return val\r\n        }\r\n        {\r\n            const val = <text x=\"11.5\" y=\"54\" font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor}>Thu</text>\r\n        return val\r\n        }\r\n    }\r\n    const thutextselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val = <text x=\"54.5\" y=\"37.5\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Thu</text>\r\n        return val\r\n        }\r\n        else{\r\n            const val = <text x=\"11.5\" y=\"54\" font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Thu</text>\r\n            return val\r\n        }\r\n    }\r\n    const frirect = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <rect x=\"70\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val =  <rect x=\"9.5\" y=\"61\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n            return val\r\n        }\r\n    }\r\n    const frirectselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <rect x=\"70\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val =  <rect x=\"9.5\" y=\"61\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n    }\r\n    const fritext = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <text x=\"73.5\" y=\"37.5\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor}>Fri</text>\r\n        return val\r\n        }\r\n        else{\r\n            const val =  <text x=\"12.5\" y=\"68\" font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor}>Fri</text>\r\n        return val\r\n        }\r\n    }\r\n    const fritextselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <text x=\"73.5\" y=\"37.5\" font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Fri</text>\r\n        return val\r\n        }\r\n        else{\r\n            const val =  <text x=\"12.5\" y=\"68\" font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Fri</text>\r\n        return val\r\n        }\r\n    }\r\n    const satrect = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <rect x=\"88\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.5' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val =  <rect x=\"9.5\" y=\"75\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.5' stroke='blue' opacity='0.5'/>\r\n            return val\r\n        }\r\n    }\r\n    const satrectselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <rect x=\"88\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.5' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val =  <rect x=\"9.5\" y=\"75\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.5' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n    }\r\n    const sattext = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <text x=\"91\" y=\"37.5\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor}>Sat</text>\r\n        return val\r\n        }\r\n        else{\r\n            const val =  <text x=\"12.5\" y=\"81\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor}>Sat</text>\r\n            return val\r\n        }\r\n    }\r\n    const sattextselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <text x=\"91\" y=\"37.5\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Sat</text>\r\n        return val\r\n        }\r\n        else{\r\n            const val =  <text x=\"12.5\" y=\"81\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Sat</text>\r\n            return val\r\n        }\r\n    }\r\n    const sunrect = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <rect x=\"106\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val =  <rect x=\"9.5\" y=\"89\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='rgb(20, 20, 22)'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n    }\r\n    const sunrectselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <rect x=\"106\" y=\"31\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n        return val\r\n        }\r\n        else{\r\n            const val =  <rect x=\"9.5\" y=\"89\" rx=\"2\" ry=\"2\" width=\"14\" height=\"10\" fill='blue'  stroke-width='.8' stroke='blue' opacity='0.5'/>\r\n            return val\r\n        }\r\n    }\r\n    const suntext = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <text x=\"108\" y=\"37.5\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor}>Sun</text>\r\n        return val\r\n        }\r\n        else{\r\n            const val =  <text x=\"12.5\" y=\"96\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill={fillcolor}>Sun</text>\r\n            return val\r\n        }\r\n    }\r\n    const suntextselected = () =>{\r\n        if(screenwidth > 414){\r\n        const val =  <text x=\"108\" y=\"37.5\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Sun</text>\r\n        return val\r\n    }\r\n    else{\r\n        const val =  <text x=\"12.5\" y=\"96\"font-family=\"Arial\" font-weight=\"bold\" font-size='5' fill='white'>Sun</text>\r\n        return val\r\n    }\r\n    }\r\n\r\nif(dayval==='0'){\r\n    return(\r\n        <svg>\r\n             {monrect()}\r\n             {montext()}\r\n             {tuerect()}\r\n             {tuetext()}\r\n            \r\n             {wedrect()}\r\n             {wedtext()}\r\n             {thurect()}\r\n             {thutext()}\r\n             {frirect()}\r\n             {fritext()}\r\n             {satrect()}\r\n             {sattext()}\r\n             {sunrectselected()}\r\n             {suntextselected()}\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nif(dayval==='1'){\r\n    return(\r\n        <svg>\r\n             {monrectselected()}\r\n             {montextselected()}\r\n             {tuerect()}\r\n             {tuetext()}\r\n            \r\n             {wedrect()}\r\n             {wedtext()}\r\n             {thurect()}\r\n             {thutext()}\r\n             {frirect()}\r\n             {fritext()}\r\n             {satrect()}\r\n             {sattext()}\r\n             {sunrect()}\r\n             {suntext()}\r\n              \r\n              \r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nif(dayval==='2'){\r\n    return(\r\n        <svg>\r\n             {monrect()}\r\n             {montext()}\r\n             {tuerectselected()}\r\n             {tuetextselected()}\r\n            \r\n             {wedrect()}\r\n             {wedtext()}\r\n             {thurect()}\r\n             {thutext()}\r\n             {frirect()}\r\n             {fritext()}\r\n             {satrect()}\r\n             {sattext()}\r\n             {sunrect()}\r\n             {suntext()}\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nif(dayval==='3'){\r\n    return(\r\n        <svg>\r\n             {monrect()}\r\n             {montext()}\r\n             {tuerect()}\r\n             {tuetext()}\r\n            \r\n             {wedrectselected()}\r\n             {wedtextselected()}\r\n             {thurect()}\r\n             {thutext()}\r\n             {frirect()}\r\n             {fritext()}\r\n             {satrect()}\r\n             {sattext()}\r\n             {sunrect()}\r\n             {suntext()}\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nif(dayval==='4'){\r\n    return(\r\n        <svg>\r\n             {monrect()}\r\n             {montext()}\r\n             {tuerect()}\r\n             {tuetext()}\r\n            \r\n             {wedrect()}\r\n             {wedtext()}\r\n             {thurectselected()}\r\n             {thutextselected()}\r\n             {frirect()}\r\n             {fritext()}\r\n             {satrect()}\r\n             {sattext()}\r\n             {sunrect()}\r\n             {suntext()}\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nif(dayval==='5'){\r\n    return(\r\n        <svg>\r\n             {monrect()}\r\n             {montext()}\r\n             {tuerect()}\r\n             {tuetext()}\r\n            \r\n             {wedrect()}\r\n             {wedtext()}\r\n             {thurect()}\r\n             {thutext()}\r\n             {frirectselected()}\r\n             {fritextselected()}\r\n             {satrect()}\r\n             {sattext()}\r\n             {sunrect()}\r\n             {suntext()}\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nif(dayval==='6'){\r\n    return(\r\n        <svg>\r\n             {monrect()}\r\n             {montext()}\r\n             {tuerect()}\r\n             {tuetext()}\r\n            \r\n             {wedrect()}\r\n             {wedtext()}\r\n             {thurect()}\r\n             {thutext()}\r\n             {frirect()}\r\n             {fritext()}\r\n             {satrectselected()}\r\n             {sattextselected()}\r\n             {sunrect()}\r\n             {suntext()}\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\n}\r\n\r\n\r\nexport default Day","import React, {useRef,useState, useEffect,useContext} from 'react'\r\nimport {APPLContext} from './../App'\r\nimport '../App.css';\r\n//import Sound from './Sound.js'\r\nimport alarmsound from './../Sounds/alarmsound.mp3'\r\nimport useWindowDimensions from './usewindowsize'\r\nimport DigitalCharacter from './DigitalCharacter'\r\nimport Colon from './colon'\r\nimport Day from './Day'\r\n\r\n\r\n//import { getByDisplayValue } from '@testing-library/react';\r\n\r\n\r\n//main digital clock routine\r\nconst  Digitalclock = () => {\r\n  const { width } = useWindowDimensions();\r\n  const [date, setDate] = useState(new Date());\r\n  const aPPLContext = useContext(APPLContext)\r\n  const hr1digit = useRef('');\r\n  const hr2digit = useRef('');\r\n  const min1digit = useRef('');\r\n  const min2digit = useRef('');\r\n  const second1digit = useRef('');\r\n  const second2digit = useRef('');\r\n  const AMPMCharterChange = useRef('');\r\n  const day = useRef('');\r\n  const month = useRef('');\r\n  const year = useRef('');\r\n  const daydate = useRef('');\r\n  const countdowntime = useRef('');\r\n  const timersec = useRef('');\r\n  const timermin = useRef('');\r\n  let  [,setState]=useState();\r\n  const isPlaying = useRef(false);\r\n  const audioRef = useRef(new Audio(alarmsound));\r\n  const alarmhr = useRef('')\r\n  \r\n\r\n  //<img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n \r\n\r\n \r\n //checks for hour and then splits the hour into two digits which are displayed in the seven segement LED\r\n const hourtime = () =>{\r\n  \r\n  let hr=date.getHours().toString()\r\n  \r\n  if(hr==='0'){\r\n    hr='12'\r\n  }\r\n  if (hr<10){\r\n    \r\n    hr1digit.current = '0'\r\n    hr2digit.current = hr \r\n  }\r\n   if (hr>=10){\r\n    hr1digit.current = hr.slice(0, 1);\r\n    hr2digit.current = hr.slice(1, 2); \r\n   \r\n   }\r\n\r\n   //covert to regular time\r\n   if (hr>=13){\r\n   \r\n    hr = hr-12\r\n    \r\n    if (hr<10){\r\n      \r\n      hr1digit.current = '.'\r\n      hr2digit.current = hr.toString() \r\n      \r\n    }\r\n     if (hr>=10){\r\n     \r\n      hr1digit.current = hr.toString().slice(0, 1);\r\n      hr2digit.current = hr.toString().slice(1, 2); \r\n     \r\n     } \r\n   }\r\n\r\n   let ap=date.getHours().toString()\r\n   //console.log(ap)\r\n   if (ap >=12){\r\n    AMPMCharterChange.current = 'P'\r\n   }\r\n   else{\r\n    AMPMCharterChange.current = 'A'\r\n   }\r\n }\r\n\r\n //cal minutes\r\n const mintime = () =>{\r\n  \r\n  let min=date.getMinutes().toString()\r\n  if (min<10){\r\n    min1digit.current = '0'\r\n    min2digit.current = min \r\n  }\r\n   if (min>=10){\r\n    min1digit.current = min.slice(0, 1);\r\n    min2digit.current = min.slice(1, 2); \r\n   \r\n   }\r\n }\r\n\r\n //cal seconds\r\n const sectime = () =>{\r\n  \r\n  let sec=date.getSeconds().toString()\r\n  if (sec<10){\r\n    second1digit.current = '0'\r\n    second2digit.current = sec \r\n  }\r\n   if (sec>=10){\r\n    second1digit.current = sec.slice(0, 1);\r\n    second2digit.current = sec.slice(1, 2); \r\n   \r\n   }\r\n }\r\n\r\n //cal of week which returns a number from 0-6 - 0=Sunday .....\r\n const daytime = () =>{\r\n  let d = new Date();\r\n    day.current = d.getDay().toString() \r\n }\r\n\r\n //cal month which returns back 0-11 0=Jan\r\n const monthtime = () =>{\r\n  let d = new Date();\r\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n  \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n];\r\n  month.current = monthNames[d.getMonth()] \r\n}\r\n\r\n//cal year\r\nconst yeartime = () =>{\r\n  let d = new Date();\r\n  year.current = d.getFullYear() \r\n}\r\n\r\n\r\n//cal the calander date of the current day\r\nconst calendardatetime = () =>{\r\n  let d = new Date();\r\n  daydate.current = parseInt(d.getDate()) \r\n  //console.log(daydate.current)\r\n}\r\n\r\n\r\n\r\n//sets off the alarm when alarm time matches current time\r\nconst checkAlarmSet = () => {\r\nif(hr1digit.current==='.'){\r\n  alarmhr.current = '0'\r\n}\r\nelse{\r\n  alarmhr.current = hr1digit.current\r\n}\r\n  let hr = alarmhr.current + hr2digit.current\r\n  let min = min1digit.current + min2digit.current\r\n  let ampm =  AMPMCharterChange.current + 'M'\r\n \r\n//  let context = new (window.AudioContext || window.webkitAudioContext || false)();\r\n // if (context) {\r\n    // Do whatever you want using the Web Audio API\r\n //   console.log('exists')\r\n    // ...\r\n//} else {\r\n    // Web Audio API is not supported\r\n    // Alert the user\r\n //   alert(\"Sorry, but the Web Audio API is not supported by your browser. Please, consider upgrading to the latest version or downloading Google Chrome or Mozilla Firefox\");\r\n//}\r\n // let note = new Sound(context);\r\n // let now = context.currentTime;\r\n  \r\n\r\n   if( parseInt(hr) === parseInt(aPPLContext.hr) &&  parseInt(min) === parseInt(aPPLContext.min) &&  ampm === aPPLContext.ampm &&  aPPLContext.alarmflag ==='on'){\r\n    \r\n    isPlaying.current = true\r\n    if(isPlaying.current === true){\r\n      audioRef.current.play();\r\n    }\r\n   // console.log(context.currentTime)\r\n     \r\n   //  note.play(520.00, now + 2 );\r\n   //  note.play(600.63, now + 1.5);\r\n   //  note.play(802.18, now + 1);\r\n   //  note.play(1864.66, now  );\r\n   //  note.play(1479.98, now + 1.5);\r\n   //  note.play(1244.51, now + 2);\r\n   //  note.play(155.56, now );\r\n   //  note.play(1479.98, now + .5);\r\n   //  note.play(783.99, now + 2.5);\r\n   //  note.play(1864.66, now );\r\n   //  note.play(1479.98, now  + .5);\r\n   //  note.play(659.25, now + 1.5);\r\n   //  note.play(783.99, now + .5);\r\n   \r\n   \r\n   }\r\n   else{\r\n    isPlaying.current = false\r\n    audioRef.current.pause()\r\n   }\r\n }\r\n\r\n useEffect(() => {\r\n  var tkID = setInterval( () => tick(), 1000 );\r\n  \r\n  return function cleanup() {\r\n      clearInterval(tkID);\r\n    };\r\n\r\n    \r\n },[]);\r\n\r\n //set new date on every second\r\n   function tick() {\r\n    setDate(new Date());\r\n    \r\n   }\r\n\r\n  \r\n  // useEffect(() => {\r\n //   if (isPlaying.current === true) {\r\n  //    audioRef.current.play();\r\n //   } else {\r\n //     audioRef.current.pause();\r\n //   }\r\n // }, [isPlaying]);\r\n\r\n mintime()\r\n hourtime()\r\n sectime()\r\n daytime()\r\n calendardatetime()\r\n monthtime()\r\n yeartime()\r\n checkAlarmSet()\r\n \r\n\r\n //check screen to see if it is mobile or desk top\r\n if(width <= 414){\r\n   return(\r\n    <div className=\"clockbackground\">\r\n          \r\n    <div    className='svgbborderbox' >\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\"  width='88%' height='93%' viewBox=\"-1 10 65 100\" className='svgbox'>\r\n   \r\n    <DigitalCharacter num={hr1digit.current} fillcolor='#18dbdb' xval='-2' yval='-55'/>\r\n    <DigitalCharacter num={hr2digit.current} fillcolor='#18dbdb' xval='10' yval='-55'/>\r\n    <Colon fillcolor='yellow' xval='-9' yval='-37'screenwidth={width}/>\r\n    <DigitalCharacter num={min1digit.current} fillcolor='#18dbdb' xval='-2' yval='-28'/>\r\n    <DigitalCharacter num={min2digit.current} fillcolor='#18dbdb' xval='10' yval='-28'/>\r\n    <Colon fillcolor='yellow' xval='-9' yval='-11'screenwidth={width}/>\r\n    <DigitalCharacter num={second1digit.current} fillcolor='#18dbdb' xval='-2' yval='-2'/>\r\n    <DigitalCharacter num={second2digit.current} fillcolor='#18dbdb' xval='10' yval='-2'/>\r\n    <Colon fillcolor='yellow' xval='-9' yval='16' screenwidth={width}/>\r\n    <DigitalCharacter num={ AMPMCharterChange.current} fillcolor='#18dbdb' xval='-2' yval='25'/>\r\n    <DigitalCharacter num='M' fillcolor='#18dbdb' xval='10' yval='25'/>\r\n    <Day dayval={day.current} fillcolor='red' screenwidth={width}/>\r\n    <text x=\"6.5\" y=\"109\"font-family=\"Arial\" font-size='9' fill=\"blue\">{month.current} {daydate.current}/{year.current}</text>\r\n     <path d=\"m 6.9,110.782259 0.0942,2.052062 1.318824,3.078094 2.637647,2.145336 18.463531,-0.09327 v -6.90239 z\" fill='white' />\r\n     <path d=\" m 55.77928,110.782259 -0.0942,2.052062 -1.31883,3.078094 -2.637642,2.145336 -18.463532,-0.09327 v -6.90239 z\" fill='white'/>\r\n     <text x=\"13\" y=\"115.782259\"font-family=\"Arial\" font-size='5' fill=\"red\">Alarm</text>\r\n     <text x=\"37.5\" y=\"115.782259\"font-family=\"Arial\" font-size='5' fill=\"red\">Timer</text>\r\n   \r\n  </svg>\r\n  \r\n  </div>\r\n  \r\n</div>\r\n   )\r\n }\r\n else{\r\n  return (\r\n    <div className=\"App\">\r\n          \r\n          <div    className='svgbborderbox'>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"  width='600px' height='250px' viewBox=\"0 0 120 60\" className='svgbox'>\r\n         \r\n          <DigitalCharacter num={hr1digit.current} fillcolor='#18dbdb' xval='-35' yval='-53'/>\r\n          <DigitalCharacter num={hr2digit.current} fillcolor='#18dbdb' xval='-24' yval='-53'/>\r\n          <Colon fillcolor='yellow' xval='-24' yval='-53' screenwidth={width}/>\r\n          <DigitalCharacter num={min1digit.current} fillcolor='#18dbdb' xval='-6' yval='-53'/>\r\n          <DigitalCharacter num={min2digit.current} fillcolor='#18dbdb' xval='5' yval='-53'/>\r\n          <Colon fillcolor='yellow' xval='5.2' yval='-53' screenwidth={width}/>\r\n          <DigitalCharacter num={second1digit.current} fillcolor='#18dbdb' xval='23' yval='-53'/>\r\n          <DigitalCharacter num={second2digit.current} fillcolor='#18dbdb' xval='34' yval='-53'/>\r\n          <Colon fillcolor='yellow' xval='36' yval='-53' screenwidth={width}/>\r\n          <DigitalCharacter num={ AMPMCharterChange.current} fillcolor='#18dbdb' xval='55' yval='-53'/>\r\n          <DigitalCharacter num='M' fillcolor='#18dbdb' xval='68' yval='-53'/>\r\n          <Day dayval={day.current} fillcolor='red' screenwidth={width}/>\r\n          <text x=\"28.5\" y=\"54.5\"font-family=\"Arial\" font-size='11' fill=\"blue\">{month.current} {daydate.current}/{year.current}</text>\r\n          <path d=\"m 0.9,47 0.0942,2.052062 1.318824,3.078094 2.637647,2.145336 18.463531,-0.09327 v -6.90239 z\" fill='#18dbdb'/>\r\n          <path d=\" m 118,47 -0.0942,2.052062 -1.31883,3.078094 -2.637642,2.145336 -18.463532,-0.09327 v -6.90239 z\" fill='#18dbdb'/>\r\n          <text x=\"6\" y=\"52\"font-family=\"Arial\" font-size='5' fill=\"red\">Alarm</text>\r\n          <text x=\"100\" y=\"52\"font-family=\"Arial\" font-size='5' fill=\"red\">Timer</text>\r\n        </svg>\r\n        \r\n        \r\n        </div>\r\n     \r\n    </div>\r\n  );\r\n }\r\n}\r\n\r\nexport default Digitalclock;\r\n","import React,{useState,useRef,useContext} from 'react';\r\nimport {APPLContext} from './../App'\r\n\r\nimport './../App.css'\r\n\r\nconst Alarm = (props) => {\r\n    \r\n    const aPPLContext = useContext(APPLContext)\r\n    const Alarmonoffstyleindicator = useRef('alarmindicatorOffstyle')\r\n    let  [,setState]=useState();\r\n\r\n    const openAlarm = ()  => {\r\n        \r\n        setState({});\r\n        document.getElementById(\"alarmboxcontainer\").style.width= \"340px\";\r\n        document.getElementById(\"alarmboxcontainer\").style.height= \"360px\";\r\n        \r\n      }\r\n      \r\n    const  closeAlarm = () => {\r\n        \r\n        setState({});\r\n        document.getElementById(\"alarmboxcontainer\").style.width = \"0px\";\r\n        document.getElementById(\"alarmboxcontainer\").style.height= \"0px\";\r\n      }\r\n\r\n    const Increasehrbutton = () =>{\r\n       // console.log (aPPLContext.hr)\r\n        let h = 0\r\n        if (aPPLContext.hr <=11 ){\r\n        h = parseInt(aPPLContext.hr) + 1\r\n         \r\n        aPPLContext.Changehr(h)\r\n      //  console.log (aPPLContext.hr)\r\n        }else{\r\n            aPPLContext.hr = -1\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    const decreasehrbutton = () =>{\r\n      //  console.log (aPPLContext.hr)\r\n        let h = 0\r\n        if (aPPLContext.hr > 0 ){\r\n        h = parseInt(aPPLContext.hr) - 1\r\n         \r\n        aPPLContext.Changehr(h)\r\n     //   console.log (aPPLContext.hr)\r\n        }else{\r\n            aPPLContext.hr = 13\r\n        }\r\n        \r\n    }\r\n\r\n    const Increaseminbutton = () =>{\r\n       // console.log (aPPLContext.min)\r\n        let m = 0\r\n        if (aPPLContext.min <=58 ){\r\n        m = parseInt(aPPLContext.min) + 1\r\n        aPPLContext.Changemin(m)\r\n       // console.log (aPPLContext.min)\r\n        } else{\r\n            aPPLContext.min = -1\r\n        }\r\n    }\r\n\r\n    const decreaseminbutton = () =>{\r\n       // console.log (aPPLContext.min)\r\n        let m = 0\r\n        if (aPPLContext.min > 0 ){\r\n        m = parseInt(aPPLContext.min) - 1\r\n        aPPLContext.Changemin(m)\r\n       // console.log (aPPLContext.min)\r\n        }else{\r\n            aPPLContext.min = 60\r\n        }\r\n        \r\n    }\r\n\r\n    const Increaseampmbutton = () =>{\r\n      //  console.log (aPPLContext.hr)\r\n        let ap = 'PM'\r\n        aPPLContext.ChangeAMPM(ap)\r\n      //  console.log (aPPLContext.ampm)\r\n        \r\n    }\r\n    const decreaseampmbutton = () =>{\r\n       // console.log (aPPLContext.hr)\r\n        let ap = 'AM'\r\n        aPPLContext.ChangeAMPM(ap)\r\n      //  console.log (aPPLContext.ampm)\r\n        \r\n    }\r\n    \r\n    //for toggle switch on alarm panel\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n\r\n    let checkbox = document.querySelector('input[type=\"checkbox\"]');\r\n\r\n    checkbox.addEventListener('change', function () {\r\n\r\n        if (checkbox.checked) {\r\n            let ap = 'on'\r\n            aPPLContext.Changealarmflag(ap)\r\n            //console.log (aPPLContext.alarmflag)\r\n          //console.log('Checked');\r\n          Alarmonoffstyleindicator.current = 'alarmindicatorOnstyle'\r\n          setState({});\r\n\r\n        } else {\r\n            let ap = 'off'\r\n            aPPLContext.Changealarmflag(ap)\r\n           // console.log (aPPLContext.alarmflag)\r\n         // console.log('Not checked');\r\n          Alarmonoffstyleindicator.current = 'alarmindicatorOffstyle'\r\n          setState({});\r\n        }\r\n      })\r\n    })\r\n\r\n\r\n    return(\r\n        <div >\r\n             <div id='alarmboxcontainer'  className='alarmboxdetail' >\r\n                <div className='Closebutton'onClick={() => closeAlarm()}>\r\n                    X\r\n                </div>\r\n                <div>\r\n                    <div className='incrementhrbutton' onClick={() => Increasehrbutton()} >+</div>\r\n                    <div className='hour'>{aPPLContext.hr}</div>\r\n                    <div className='decrementhrbutton' onClick={() => decreasehrbutton()}>-</div>\r\n                   \r\n                    <div className='incrementminbutton' onClick={() => Increaseminbutton()}>+</div>\r\n                    <div className='min'>{aPPLContext.min}</div>\r\n                    <div className='decrementminbutton' onClick={() => decreaseminbutton()}>-</div>\r\n                    <div className='incrementampmbutton' onClick={() => Increaseampmbutton()}>PM</div>\r\n                    <div className='AMPMSETTING'>{aPPLContext.ampm}</div>\r\n                    <div className='decrementampmbutton' onClick={() => decreaseampmbutton()}>AM</div>\r\n                    \r\n                    <div className='switchcontainer'>\r\n                    <label class=\"switch\">\r\n                        <input type=\"checkbox\"></input>\r\n                        <div class=\"slider\"></div>\r\n                    </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='alarmbutton' onClick={() => openAlarm()}  >\r\n                <div className={Alarmonoffstyleindicator.current}></div>\r\n            </div>\r\n\r\n       \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Alarm","import React,{useState,useRef,useEffect} from 'react';\r\n\r\nimport Sound from './Sound.js'\r\nimport alarmsound from './../Sounds/alarmsound.mp3'\r\n\r\nimport './../App.css'\r\n\r\nconst Timer = (props) => {\r\n   // const closebuttonstyle = useRef('staticclosebtn');\r\n   // const countdowntime = useRef('');\r\n   // const timersec = useRef('');\r\n    const timermin = useRef(0);\r\n    const timerhr = useRef(0);\r\n    const doonceflag = useRef(true)\r\n    const [startstopflag, setstartstopflag] = useState(true);\r\n    const [count, setcount] = useState()\r\n    const [mincountdown, setmincountdown] = useState()\r\n    const [hrcountdown, sethrcountdown] = useState()\r\n    const [seccountdown, setseccountdown] = useState()\r\n    const [soundonoff, setsoundonoff] = useState(false)\r\n    const isPlaying = useRef(false);\r\n    //const audioRef1 = useRef(new Audio(alarmsound));\r\n    const [audioRef1] = useState(new Audio(alarmsound));\r\n\r\n    let  [,setState]=useState();\r\n\r\n    const openTimer = ()  => {\r\n        \r\n        setState({});\r\n        document.getElementById(\"Timerboxcontainer\").style.width= \"340px\";\r\n        document.getElementById(\"Timerboxcontainer\").style.height= \"360px\";\r\n        \r\n      }\r\n      \r\n    const  closeTimer = () => {\r\n        \r\n        setState({});\r\n        document.getElementById(\"Timerboxcontainer\").style.width = \"0px\";\r\n        document.getElementById(\"Timerboxcontainer\").style.height= \"0px\";\r\n      }\r\n\r\n    const IncreaseThrbutton = () =>{\r\n        \r\n        \r\n        if (hrcountdown <=11 ){\r\n       \r\n        sethrcountdown(hrcountdown=>hrcountdown+1) \r\n       \r\n        \r\n        }else{\r\n            sethrcountdown(0)\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    const decreaseThrbutton = () =>{\r\n        \r\n        if (hrcountdown > 0 ){\r\n            sethrcountdown(hrcountdown=>hrcountdown-1)\r\n         \r\n        \r\n        }else{\r\n            sethrcountdown(12)\r\n        }\r\n    }\r\n\r\n    const IncreaseTminbutton = () =>{\r\n        \r\n        \r\n        if (mincountdown <=58 ){\r\n            setmincountdown(mincountdown=>mincountdown+1)\r\n        \r\n        } else{\r\n            setmincountdown(0)\r\n        }\r\n        \r\n    }\r\n\r\n    const decreaseTminbutton = () =>{\r\n        \r\n       \r\n        if (mincountdown > 0 ){\r\n            setmincountdown(mincountdown=>mincountdown-1)\r\n       \r\n        \r\n        }else{\r\n            setmincountdown(59)\r\n        }\r\n    }\r\n\r\n    const start = () =>{  \r\n        setstartstopflag(true)\r\n        setsoundonoff(false)\r\n        setmincountdown(mincountdown)\r\n        let x=0\r\n        x=seccountdown+(mincountdown*60)+(hrcountdown*60*60)\r\n\r\n        console.log(x)\r\n        console.log('start min = '+mincountdown)\r\n        setcount(x)\r\n        \r\n        \r\n    }\r\n\r\n    const stop = () =>{  \r\n          \r\n        \r\n        setstartstopflag(false)\r\n        let x=0\r\n        x=seccountdown+(mincountdown*60)+(hrcountdown*60*60)\r\n\r\n        console.log( 'count seccount=:' + x)\r\n        setcount(x)\r\n        setsoundonoff(false)\r\n        isPlaying.current = false\r\n    audioRef1.pause()\r\n    document.getElementById('beep').muted = true\r\n    document.getElementById('beep').pause();\r\n    }\r\n    \r\n    const Reset = () =>{  \r\n          \r\n        \r\n        setstartstopflag(false)\r\n        setmincountdown(mincountdown => mincountdown = 0)\r\n        sethrcountdown(hrcountdown => hrcountdown = 0)\r\n        setseccountdown(seccountdown => seccountdown = 0)\r\n        let x=0\r\n        x=seccountdown+(mincountdown*60)+(hrcountdown*60*60)\r\n\r\n       console.log( 'reset count=:' + x)\r\n        setcount(x)\r\n        setsoundonoff(false)\r\n        isPlaying.current = false\r\n    audioRef1.pause()\r\n    document.getElementById('beep').muted = true\r\n    document.getElementById('beep').pause();  \r\n    }\r\n\r\n    const playalarmsound = () =>{\r\n        \r\n        \r\n        if(isPlaying.current === true ){\r\n            if(!audioRef1.isPlaying)\r\n            {\r\n                \r\n                //audioRef1.play()\r\n                document.getElementById('beep').muted = false\r\n                document.getElementById('beep').play();\r\n            }\r\n          \r\n        }\r\n        else{\r\n            isPlaying.current = false\r\n            audioRef1.pause()\r\n            console.log('in here soundonoff = ' + soundonoff)\r\n        }\r\n    }\r\n  \r\n    //main loop for counting down the timer\r\n    useEffect(\r\n        ()=>{\r\n           \r\n            let intervaltimerId\r\n            \r\n\r\n           // init all varaibles to 0\r\n           if(doonceflag.current){\r\n            const x = 0\r\n            \r\n             const sc = x%60\r\n             const totalmin = Math.floor(x/60)\r\n             timerhr.current = Math.floor(x/3600)\r\n            setcount(x)\r\n            setseccountdown(sc)\r\n            setmincountdown(timermin.current)\r\n            sethrcountdown(timerhr.current)\r\n            doonceflag.current=false\r\n           }\r\n           \r\n            if (count > 0 && startstopflag){\r\n                intervaltimerId=setInterval(() => {\r\n                    \r\n                    \r\n                   const x = count - 1\r\n                  // console.log('inside interval =' +x)\r\n                   const sc = x%60\r\n                   const totalmin = Math.floor(x/60)\r\n                   timerhr.current = Math.floor(x/3600) \r\n\r\n                   //formats min box based on total mins on edge cases example 1:01 .. 1:00\r\n                   if(totalmin > 0 ){\r\n                       console.log('totalmins inside interval and greater then 0 = '+totalmin)\r\n                       if (totalmin > 60){\r\n                       const divmin = (totalmin % 60)\r\n                       //console.log(divmin)\r\n                       console.log('totalmins inside interval and greater then 60 = '+totalmin)\r\n                       timermin.current = divmin\r\n                       \r\n                            }else{\r\n                               \r\n                                if ((totalmin % 60)===0){\r\n                                    timermin.current = 0\r\n                                    console.log('totalmins inside interval and less then 60 {}P{P}P= '+(totalmin % 60))\r\n                                    //timermin.current = totalmin\r\n                                }else{\r\n                                    console.log('totalmins inside interval and less then 60 = '+totalmin)\r\n                                   \r\n                                timermin.current = totalmin//(totalmin % 60)\r\n                                timerhr.current = 0\r\n                               \r\n                            }\r\n\r\n                            }\r\n                   }\r\n                   \r\n                   if (x <= 59 ){\r\n                    timermin.current = 0\r\n                    \r\n                }\r\n                if (x===0){\r\n                    console.log(isPlaying.current)\r\n                    setsoundonoff(true)\r\n                    isPlaying.current = true\r\n                    console.log(isPlaying.current)\r\n                    playalarmsound()\r\n                }\r\n\r\n               \r\n             \r\n                   if(x >= 0){\r\n                   setcount(x)\r\n                   setseccountdown(sc)\r\n                   setmincountdown(timermin.current)\r\n                   sethrcountdown(timerhr.current)\r\n                   }\r\n                }, 1000);  \r\n            } \r\n            return ()=>clearInterval(intervaltimerId)\r\n           \r\n        },[count,mincountdown,hrcountdown,seccountdown,startstopflag,soundonoff])\r\n\r\n        useEffect(() => {\r\n            window.addEventListener('touchstart', () => {\r\n              document.getElementById('beep').muted = true\r\n              document.getElementById('beep').play()\r\n            })\r\n          }) \r\n    \r\n\r\n        //play alarm for timer\r\n      //  useEffect(() => {\r\n      //      const interval2 = setInterval(() => {\r\n       //         if (soundonoff){\r\n      //              playalarmsound() \r\n       //         }\r\n       //     }, 1000);\r\n       //     return () => clearInterval(interval2);\r\n       //   }, [soundonoff]);  \r\n     //    \r\n    \r\n      \r\n    return(\r\n        <div >\r\n            <audio id=\"beep\" src={alarmsound} />\r\n             <div id='Timerboxcontainer'  className='Timerboxdetail' >\r\n                <div className='Closebutton'onClick={() => closeTimer()}>\r\n                    X\r\n                </div>\r\n                <div>\r\n                    <div className='incrementhrbutton' value={hrcountdown} onClick={() => IncreaseThrbutton()} >+</div>\r\n                    <div className='hour'>h {hrcountdown}</div>\r\n                    <div className='decrementhrbutton' onClick={() => decreaseThrbutton()}>-</div>\r\n                   \r\n                    <div className='incrementminbutton' value={mincountdown} onClick={() => IncreaseTminbutton()}>+</div>\r\n                    <div className='min'>m {mincountdown}</div>\r\n                    <div className='decrementminbutton' onClick={() => decreaseTminbutton()}>-</div>\r\n                    \r\n                    <div className='timerseconds'>s {seccountdown}</div>\r\n                    <div className='starttimerbutton' value={mincountdown} onClick={() => start()}>Start</div>\r\n                    <div className='stoptimerbutton' onClick={() => stop()}>Stop</div>\r\n                    <div className='resettimerbutton' onClick={() => Reset()}>Reset</div>\r\n                   \r\n                </div>\r\n            </div>\r\n            <div className='Timerbutton' onClick={() => openTimer()}  ></div>\r\n\r\n       \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Timer","import React, {useState} from 'react';\nimport './App.css';\n\nimport Digitalclock from './components/Digitalclock'\nimport Alarm from './components/alarm';\nimport Timer from './components/timer';\n\nexport const APPLContext = React.createContext({\n  \n hr:'',\n min:'',\n ampm:'AM',\n alarmflag:'off',\n Timerhr:'',\n Timermin:'',\n Timerseconds:'0',\n Timerflag:'off',\n Timerinitcountdowntime:'0',\n \n  Changehr: ()  => {},\n  Changemin: ()  => {},\n  ChangeAMPM: () => {},\n  Changealarmflag: () => {},\n  ChangeTimerhr: ()  => {},\n  ChangeTimermin: ()  => {},\n  ChangeTimerseconds: () => {},\n  ChangeTimerflag: () => {},\n  ChangeTimerinitcountdowntime: () => {},\n});\n//import { getByDisplayValue } from '@testing-library/react';\n\n\n//main digital clock routine\nfunction App() {\n  const [hr, sethr] = useState('0')\n  const [min, setmin] = useState('0')\n  const [ampm, setampm] = useState('AM')\n  const [alarmflag, setalarmflag] = useState('off')\n  const [Timerhr, setTimerhr] = useState('0')\n  const [Timermin, setTimermin] = useState('0')\n  const [Timerseconds, setTimerseconds] = useState('0')\n  const [Timerflag, setTimerflag] = useState('off')\n  const [Timerinitcountdowntime, setTimerinitcountdowntime] = useState('0')\n\n   return(\n     \n    <APPLContext.Provider value = {{\n      hr,\n      min,\n      ampm,\n      alarmflag,\n      Timerhr,\n      Timermin,\n      Timerseconds,\n      Timerflag,\n      Timerinitcountdowntime,\n\n      Changehr: hr => sethr(hr),\n      Changemin: min => setmin(min),\n      ChangeAMPM: ampm => setampm(ampm),\n      Changealarmflag: alarmflag => setalarmflag(alarmflag),\n      ChangeTimerhr: Timerhr => setTimerhr(Timerhr),\n      ChangeTimermin: Timermin => setTimermin(Timermin),\n      ChangeTimerseconds: Timerseconds => setTimerseconds(Timerseconds),\n      ChangeTimerflag: Timerflag => setTimerflag(Timerflag),\n      ChangeTimerinitcountdowntime: Timerinitcountdowntime => setTimerinitcountdowntime(Timerinitcountdowntime),\n  \n      }}>\n          <div className=\"App\">\n        <Digitalclock />\n        <Alarm />\n        <Timer />\n        \n          </div>\n     </APPLContext.Provider>\n   )\n \n \n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}